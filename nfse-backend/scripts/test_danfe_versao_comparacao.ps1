# Script para testar gera√ß√£o de DANFE com sele√ß√£o de vers√£o
# Permite escolher entre vers√£o atual, 2026, ou ambas para compara√ß√£o

Write-Host "=== TESTE DANFE - SELE√á√ÉO DE VERS√ÉO ===" -ForegroundColor Green
Write-Host "Testando gera√ß√£o de DANFE com op√ß√µes de vers√£o..." -ForegroundColor Yellow

# Verificar se a aplica√ß√£o est√° rodando
$response = try {
    Invoke-RestMethod -Uri "http://localhost:5000/api/nfe2026/versao-layout" -Method Get -TimeoutSec 5
} catch {
    Write-Host "ERRO: Aplica√ß√£o n√£o est√° rodando. Execute 'dotnet run' primeiro." -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Aplica√ß√£o est√° rodando" -ForegroundColor Green

# Ler o arquivo de exemplo
$exemploPath = "C:\Users\user\Desktop\nfse\nfse-backend\Exemplos\exemplo-nfe-2026-minima.json"
if (-not (Test-Path $exemploPath)) {
    Write-Host "ERRO: Arquivo de exemplo n√£o encontrado: $exemploPath" -ForegroundColor Red
    exit 1
}

$nfeData = Get-Content $exemploPath -Raw | ConvertFrom-Json
Write-Host "‚úÖ Dados de exemplo carregados" -ForegroundColor Green

# Fun√ß√£o para testar uma vers√£o espec√≠fica
function Test-DanfeVersao {
    param(
        [string]$versao,
        [string]$descricao
    )
    
    Write-Host "`n--- Testando $descricao ---" -ForegroundColor Cyan
    
    $requestData = @{
        NFe = $nfeData
        Versao = $versao
        IsContingencia = $false
    }
    
    try {
        $response = Invoke-RestMethod -Uri "http://localhost:5000/api/nfe2026/gerar-danfe-versao" -Method Post -Body ($requestData | ConvertTo-Json -Depth 10) -ContentType "application/json"
        
        if ($response.sucesso -eq $true) {
            Write-Host "‚úÖ $descricao gerada com sucesso!" -ForegroundColor Green
            Write-Host "   Vers√£o solicitada: $($response.versaoSolicitada)" -ForegroundColor White
            Write-Host "   Quantidade de DANFEs: $($response.danfes.Count)" -ForegroundColor White
            
            foreach ($danfe in $response.danfes) {
                Write-Host "   üìÑ $($danfe.versao) - Layout: $($danfe.layout)" -ForegroundColor Yellow
                Write-Host "      Arquivo: $($danfe.nomeArquivo)" -ForegroundColor White
                Write-Host "      Tamanho: $($danfe.tamanhoBytes) bytes" -ForegroundColor White
                Write-Host "      Campos inclu√≠dos:" -ForegroundColor White
                
                foreach ($campo in $danfe.camposIncluidos) {
                    Write-Host "        - $campo" -ForegroundColor Gray
                }
                
                # Salvar o arquivo PDF
                $pdfBytes = [System.Convert]::FromBase64String($danfe.danfeBase64)
                $nomeArquivo = $danfe.nomeArquivo
                [System.IO.File]::WriteAllBytes($nomeArquivo, $pdfBytes)
                Write-Host "      üíæ Arquivo salvo: $nomeArquivo" -ForegroundColor Green
            }
            
            # Se for "ambas", mostrar compara√ß√£o
            if ($versao -eq "ambas" -and $response.comparacao) {
                Write-Host "`n   üìä COMPARA√á√ÉO DAS VERS√ïES:" -ForegroundColor Magenta
                Write-Host "   Diferen√ßas principais:" -ForegroundColor White
                foreach ($diff in $response.comparacao.diferencasPrincipais) {
                    Write-Host "     ‚Ä¢ $diff" -ForegroundColor Yellow
                }
                
                Write-Host "`n   Novos campos na vers√£o 2026:" -ForegroundColor White
                foreach ($campo in $response.comparacao.camposNovos) {
                    Write-Host "     + $campo" -ForegroundColor Green
                }
                
                Write-Host "`n   Campos mantidos:" -ForegroundColor White
                foreach ($campo in $response.comparacao.camposMantidos) {
                    Write-Host "     = $campo" -ForegroundColor Blue
                }
            }
            
            return $true
        } else {
            Write-Host "‚ùå Erro na resposta da API" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå Erro ao gerar $descricao : $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# Testar vers√£o atual
$sucessoAtual = Test-DanfeVersao -versao "atual" -descricao "DANFE Vers√£o Atual (4.00)"

# Testar vers√£o 2026
$sucesso2026 = Test-DanfeVersao -versao "2026" -descricao "DANFE Vers√£o 2026 (Reforma Tribut√°ria)"

# Testar ambas as vers√µes para compara√ß√£o
$sucessoAmbas = Test-DanfeVersao -versao "ambas" -descricao "DANFE Ambas as Vers√µes (Compara√ß√£o)"

# Resumo dos testes
Write-Host "`n=== RESUMO DOS TESTES ===" -ForegroundColor Green
Write-Host "‚úÖ Vers√£o Atual: $(if($sucessoAtual) {'Sucesso'} else {'Falhou'})" -ForegroundColor $(if($sucessoAtual) {'Green'} else {'Red'})
Write-Host "‚úÖ Vers√£o 2026: $(if($sucesso2026) {'Sucesso'} else {'Falhou'})" -ForegroundColor $(if($sucesso2026) {'Green'} else {'Red'})
Write-Host "‚úÖ Compara√ß√£o: $(if($sucessoAmbas) {'Sucesso'} else {'Falhou'})" -ForegroundColor $(if($sucessoAmbas) {'Green'} else {'Red'})

if ($sucessoAtual -and $sucesso2026 -and $sucessoAmbas) {
    Write-Host "`nüéâ TODOS OS TESTES PASSARAM!" -ForegroundColor Green
    Write-Host "üìÅ Arquivos PDF gerados:" -ForegroundColor Cyan
    Get-ChildItem -Path "." -Filter "DANFE_*.pdf" | ForEach-Object {
        Write-Host "   üìÑ $($_.Name) ($($_.Length) bytes)" -ForegroundColor White
    }
    
    Write-Host "`nüí° DIFEREN√áAS PRINCIPAIS ENTRE AS VERS√ïES:" -ForegroundColor Magenta
    Write-Host "   üîµ Vers√£o Atual (4.00):" -ForegroundColor Blue
    Write-Host "      - ICMS tradicional" -ForegroundColor White
    Write-Host "      - IPI, PIS, COFINS" -ForegroundColor White
    Write-Host "      - Layout b√°sico" -ForegroundColor White
    
    Write-Host "`n   üü¢ Vers√£o 2026 (Reforma Tribut√°ria):" -ForegroundColor Green
    Write-Host "      - IBS (Imposto sobre Bens e Servi√ßos)" -ForegroundColor White
    Write-Host "      - CBS (Contribui√ß√£o sobre Bens e Servi√ßos)" -ForegroundColor White
    Write-Host "      - IS (Imposto Seletivo)" -ForegroundColor White
    Write-Host "      - Rastreabilidade (GTIN)" -ForegroundColor White
    Write-Host "      - Totais por UF/Munic√≠pio" -ForegroundColor White
    Write-Host "      - Refer√™ncias de documentos" -ForegroundColor White
    Write-Host "      - Layout visual aprimorado" -ForegroundColor White
} else {
    Write-Host "`n‚ùå Alguns testes falharam. Verifique os erros acima." -ForegroundColor Red
}

Write-Host "`nüìã INSTRU√á√ïES DE USO:" -ForegroundColor Cyan
Write-Host "   1. Use 'atual' para gerar apenas a DANFE tradicional" -ForegroundColor White
Write-Host "   2. Use '2026' para gerar apenas a DANFE da reforma tribut√°ria" -ForegroundColor White
Write-Host "   3. Use 'ambas' para gerar as duas vers√µes e comparar diferen√ßas" -ForegroundColor White
Write-Host "   4. Os arquivos PDF s√£o salvos automaticamente no diret√≥rio atual" -ForegroundColor White
